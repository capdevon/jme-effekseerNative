apply plugin: 'maven'
apply plugin: 'java-library'


group = "com.jme.effekseer"
version= project.hasProperty('in_version') ? project.getProperty('in_version') : '-SNAPSHOT'

targetCompatibility = '1.8'
sourceCompatibility = '1.8'

repositories {
    jcenter()
    maven {  
		  url "https://jitpack.io" 
    }
    maven {
         url  "https://dl.bintray.com/riccardo/effekseer" 
    }
}

dependencies {
    api "effekseer:effekseer-native:jme1.1.6"

    compileOnly "org.jmonkeyengine:jme3-core:3.2.3-stable"
    compileOnly "org.jmonkeyengine:jme3-desktop:3.2.3-stable"

    testImplementation 'com.github.polincdev:JesseModel:-SNAPSHOT'    
    testImplementation "org.jmonkeyengine:jme3-core:3.2.3-stable"
    testImplementation "org.jmonkeyengine:jme3-lwjgl:3.2.3-stable"
    testImplementation "org.jmonkeyengine:jme3-desktop:3.2.3-stable"
    testImplementation "org.jmonkeyengine:jme3-bullet:3.2.3-stable"
    testImplementation "org.jmonkeyengine:jme3-effects:3.2.3-stable"
    testImplementation "org.jmonkeyengine:jme3-plugins:3.2.3-stable"
    testImplementation "org.jmonkeyengine:jme3-bullet-native:3.2.3-stable"
}

compileJava.doLast {
	def buildDate = new Date().format('yyyy-MM-dd HHmm')
	println "Writing jme-effekseerNative.build.date: " + buildDate
	new File(destinationDir, "jme-effekseerNative.build.date").text = buildDate
	new File(destinationDir, "jme-effekseerNative.build.version").text = version
}

task testJar(type: Jar) {
    classifier = 'test'
    from sourceSets.test.output
    manifest {
        attributes(
        'Main-Class': 'EffekseerTest'
        )
    }
    from { configurations.testRuntimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
