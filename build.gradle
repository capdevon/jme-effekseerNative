plugins {
    id "io.github.0ffz.github-packages" version "1.2.1"
}

apply plugin: 'maven-publish'
apply plugin: 'java-library'


targetCompatibility = '1.8'
sourceCompatibility = '1.8'

repositories {
    maven githubPackage.invoke("riccardobl")
    mavenCentral()
    maven {  url "https://jitpack.io" }
}



publishing {
    publications {
        maven(MavenPublication) {
            groupId =  "wf.frk"
            artifactId = rootProject.name
            version = project.hasProperty('in_version') ? project.getProperty('in_version') : '-SNAPSHOT'

            from components.java
        }
    }
    repositories {
        maven {
            url = gradle.rootProject.projectDir.absolutePath + '/dist/maven'            
            name="dist"
        }
    }
}



dependencies {
    api "effekseer:effekseer-native:test6"

    compileOnly "org.jmonkeyengine:jme3-core:3.2.3-stable"
    compileOnly "org.jmonkeyengine:jme3-desktop:3.2.3-stable"

    testImplementation 'com.github.polincdev:JesseModel:-SNAPSHOT'    
    testImplementation "org.jmonkeyengine:jme3-core:3.2.3-stable"
    testImplementation "org.jmonkeyengine:jme3-lwjgl:3.2.3-stable"
    testImplementation "org.jmonkeyengine:jme3-desktop:3.2.3-stable"
    testImplementation "org.jmonkeyengine:jme3-bullet:3.2.3-stable"
    testImplementation "org.jmonkeyengine:jme3-effects:3.2.3-stable"
    testImplementation "org.jmonkeyengine:jme3-plugins:3.2.3-stable"
    testImplementation "org.jmonkeyengine:jme3-bullet-native:3.2.3-stable"
}

compileJava.doLast {
	def buildDate = new Date().format('yyyy-MM-dd HHmm')
	println "Writing jme-effekseer-native.build.date: " + buildDate
	new File(destinationDir, "jme-effekseer-native.build.date").text = buildDate
	new File(destinationDir, "jme-effekseer-native.build.version").text = version
}

task testJar(type: Jar) {
    classifier = 'test'
    from sourceSets.test.output
    manifest {
        attributes(
        'Main-Class': 'EffekseerTest'
        )
    }
    from { configurations.testRuntimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
